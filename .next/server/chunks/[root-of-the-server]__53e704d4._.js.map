{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Samira/.trae/temp-restore/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\n\nconst handler = NextAuth({\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"email\" },\n        password: { label: \"Password\", type: \"password\" }\n      },\n      async authorize(credentials) {\n        // This is where you would typically verify against your database\n        // For demo purposes, we'll use a simple check\n        if (credentials?.email === \"user@example.com\" && credentials?.password === \"password\") {\n          return {\n            id: \"1\",\n            name: \"Demo User\",\n            email: \"user@example.com\",\n            image: \"https://via.placeholder.com/150\"\n          };\n        }\n        return null;\n      }\n    })\n  ],\n  pages: {\n    signIn: '/signin',\n    signUp: '/signup',\n    error: '/auth/error',\n  },\n  session: {\n    strategy: \"jwt\",\n  },\n  callbacks: {\n    async session({ session, token }) {\n      if (token && session.user) {\n        session.user.id = token.sub as string;\n      }\n      return session;\n    }\n  }\n});\n\nexport { handler as GET, handler as POST };"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,MAAM,UAAU,IAAA,qKAAQ,EAAC;IACvB,WAAW;QACT,IAAA,wLAAmB,EAAC;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,iEAAiE;gBACjE,8CAA8C;gBAC9C,IAAI,aAAa,UAAU,sBAAsB,aAAa,aAAa,YAAY;oBACrF,OAAO;wBACL,IAAI;wBACJ,MAAM;wBACN,OAAO;wBACP,OAAO;oBACT;gBACF;gBACA,OAAO;YACT;QACF;KACD;IACD,OAAO;QACL,QAAQ;QACR,QAAQ;QACR,OAAO;IACT;IACA,SAAS;QACP,UAAU;IACZ;IACA,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,SAAS,QAAQ,IAAI,EAAE;gBACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG;YAC7B;YACA,OAAO;QACT;IACF;AACF","debugId":null}}]
}