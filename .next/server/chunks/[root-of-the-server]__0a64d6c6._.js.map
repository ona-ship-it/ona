{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Samira/.trae/temp-restore/src/app/auth.ts"],"sourcesContent":["import { getServerSession } from \"next-auth\";\nimport type { NextAuthOptions, DefaultSession } from \"next-auth\";\nimport GoogleProvider from \"next-auth/providers/google\";\n\n// Extend the built-in session types\ndeclare module \"next-auth\" {\n  interface Session extends DefaultSession {\n    user: {\n      id: string;\n    } & DefaultSession[\"user\"]\n  }\n}\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    })\n  ],\n  pages: {\n    signIn: '/login',\n    // signUp: '/signup', // NextAuth does not expose a signUp page option\n    error: '/auth/error',\n  },\n  session: {\n    strategy: \"jwt\",\n  },\n  callbacks: {\n    async session({ session, token }) {\n      if (token && session.user) {\n        session.user.id = token.sub as string;\n      }\n      return session;\n    }\n  }\n};\n\nexport const getAuthSession = () => getServerSession(authOptions);"],"names":[],"mappings":";;;;;;AAAA;AAEA;;;AAWO,MAAM,cAA+B;IAC1C,WAAW;QACT,IAAA,mLAAc,EAAC;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;IACD,OAAO;QACL,QAAQ;QACR,sEAAsE;QACtE,OAAO;IACT;IACA,SAAS;QACP,UAAU;IACZ;IACA,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,SAAS,QAAQ,IAAI,EAAE;gBACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG;YAC7B;YACA,OAAO;QACT;IACF;AACF;AAEO,MAAM,iBAAiB,IAAM,IAAA,8KAAgB,EAAC","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Samira/.trae/temp-restore/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport { authOptions } from \"@/app/auth\";\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,MAAM,UAAU,IAAA,qKAAQ,EAAC,sJAAW","debugId":null}}]
}