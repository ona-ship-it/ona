{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/temp-restore/src/middleware.ts"],"sourcesContent":["import { createMiddlewareClient } from '@supabase/auth-helpers-nextjs'\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\n// Routes that require authentication\nconst protectedRoutes = ['/profile', '/account']\n// Admin routes\nconst adminRoutes = ['/admin']\n\nexport async function middleware(req: NextRequest) {\n  const res = NextResponse.next()\n  const supabase = createMiddlewareClient({ req, res })\n  \n  // Check if the route requires authentication\n  const isProtectedRoute = protectedRoutes.some(route => \n    req.nextUrl.pathname.startsWith(route)\n  )\n  \n  // Check if the route is admin-only\n  const isAdminRoute = adminRoutes.some(route => \n    req.nextUrl.pathname.startsWith(route)\n  )\n  \n  if (isProtectedRoute || isAdminRoute) {\n    const { data: { session } } = await supabase.auth.getSession()\n    \n    // If no session and trying to access protected route, redirect to login\n    if (!session) {\n      const redirectUrl = new URL('/login', req.url)\n      redirectUrl.searchParams.set('redirectTo', req.nextUrl.pathname)\n      return NextResponse.redirect(redirectUrl)\n    }\n    \n    // For admin routes, check if user is admin\n    if (isAdminRoute) {\n      const { data: profile } = await supabase\n        .from('onagui_profiles')\n        .select('onagui_type')\n        .eq('id', session.user.id)\n        .single()\n      \n      if (!profile || profile.onagui_type !== 'admin') {\n        return NextResponse.redirect(new URL('/', req.url))\n      }\n    }\n  } else {\n    // For non-protected routes, just refresh the session\n    await supabase.auth.getSession()\n  }\n  \n  return res\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;AAGA,qCAAqC;AACrC,MAAM,kBAAkB;IAAC;IAAY;CAAW;AAChD,eAAe;AACf,MAAM,cAAc;IAAC;CAAS;AAEvB,eAAe,WAAW,GAAgB;IAC/C,MAAM,MAAM,mNAAY,CAAC,IAAI;IAC7B,MAAM,WAAW,IAAA,6NAAsB,EAAC;QAAE;QAAK;IAAI;IAEnD,6CAA6C;IAC7C,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAA,QAC5C,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAGlC,mCAAmC;IACnC,MAAM,eAAe,YAAY,IAAI,CAAC,CAAA,QACpC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAGlC,IAAI,oBAAoB,cAAc;QACpC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;QAE5D,wEAAwE;QACxE,IAAI,CAAC,SAAS;YACZ,MAAM,cAAc,IAAI,IAAI,UAAU,IAAI,GAAG;YAC7C,YAAY,YAAY,CAAC,GAAG,CAAC,cAAc,IAAI,OAAO,CAAC,QAAQ;YAC/D,OAAO,mNAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,2CAA2C;QAC3C,IAAI,cAAc;YAChB,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,SAC7B,IAAI,CAAC,mBACL,MAAM,CAAC,eACP,EAAE,CAAC,MAAM,QAAQ,IAAI,CAAC,EAAE,EACxB,MAAM;YAET,IAAI,CAAC,WAAW,QAAQ,WAAW,KAAK,SAAS;gBAC/C,OAAO,mNAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;YACnD;QACF;IACF,OAAO;QACL,qDAAqD;QACrD,MAAM,SAAS,IAAI,CAAC,UAAU;IAChC;IAEA,OAAO;AACT"}}]
}